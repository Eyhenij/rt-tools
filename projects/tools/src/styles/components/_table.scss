@use '../base/mixin' as mixins;

$table: (
    header: (
        z-index: 2,
        font-size: 0.875rem,
        background-color: var(--mdc-filled-text-field-container-color),
    ),
    body: (
        font-size: 0.875rem,
    ),
    row: (
        height: 3rem,
        color: var(--clr-txt),
        border-bottom: 1px solid var(--clr-black-20),
        background-color: transparent,
    ),
    row-hover: (
        border-bottom: 1px solid var(--clr-blue-100),
        transition: 0.2s,
    ),
    row-active: (
        border-bottom: 1px solid var(--clr-blue-100),
    ),
    header-cell-wrapper: (
        padding: 0.625rem,
        text-color: var(--clr-txt),
        font-size: 1rem,
        font-weight: 500,
        text-align: left,
        line-height: 1.2,
        border-bottom: 1px solid var(--clr-black-20),
        border-right: 1px solid var(--clr-black-40),
        background-color: var(--clr-white-100),
    ),
    base-cell-wrapper: (
        padding: 0.625rem,
    ),
    base-cell-wrapper-last-child: (
        padding: 0.625rem 4rem 0.625rem 0.625rem,
    ),
);

:root {
    @each $element, $elements in $table {
        @each $style-token, $value in $elements {
            #{mixins.generateCssVar('table', #{$element}, #{$style-token})}: #{$value};
        }
    }
}

// TABLE
.c-table {
    width: 100%;

    border-collapse: collapse;

    overflow-x: scroll;
    overflow-y: scroll;

    thead {
        position: sticky;
        top: 0;
        z-index: var(--rt-table-header-z-index);
        font-size: var(--rt-table-header-font-size);

        tr {
            th {
                background-color: var(--rt-table-header-background-color);

                &:hover {
                    &:not(.c-table__cell--selectable) {
                        background-color: color-mix(in srgb, var(--rt-table-header-background-color), var(--clr-white-100) 30%);
                    }
                }
            }
        }
    }

    tbody {
        font-size: var(--rt-table-body-font-size);
        background: transparent;
    }
}

// ROW
.c-table__row {
    height: var(--rt-table-row-height);
    color: var(--rt-table-row-color);
    border-bottom: var(--rt-table-row-border-bottom);
    background-color: var(--rt-table-row-background-color);

    position: relative;

    &--active {
        border-bottom: var(--rt-table-row-active-border-bottom);
    }

    &--clickable {
        cursor: pointer;
    }

    &:hover {
        border-bottom: var(--rt-table-row-hover-border-bottom);
        transition: var(--rt-table-row-hover-transition);

        .c-table-actions {
            visibility: visible;
        }
    }
}

// CELL
th.c-table__cell {
    width: fit-content;
    height: 100%;

    position: relative;

    pointer-events: none;

    padding: var(--rt-table-header-cell-wrapper-padding);
    color: var(--rt-table-header-cell-wrapper-text-color);
    font-size: var(--rt-table-header-cell-wrapper-font-size);
    font-weight: var(--rt-table-header-cell-wrapper-font-weight);
    text-align: var(--rt-table-header-cell-wrapper-text-align);
    line-height: var(--rt-table-header-cell-wrapper-line-height);
    border-bottom: var(--rt-table-header-cell-wrapper-border-bottom);
    background-color: var(--rt-table-header-cell-wrapper-background-color);

    &--sortable,
    &--selectable {
        pointer-events: auto;
    }

    &:not(:last-child):not(&--selectable) {
        &::after {
            content: '';
            position: absolute;
            right: 0;
            top: 25%;
            height: 50%;
            border-right: var(--rt-table-header-cell-wrapper-border-right);
            pointer-events: none;
        }
    }
}

td.c-table__cell {
    width: fit-content;
    height: 100%;

    padding: var(--rt-table-base-cell-wrapper-padding);

    &--copyable {
        &:last-of-type {
            padding: var(--rt-table-base-cell-wrapper-last-child-padding);
        }
    }
}

// ROW ACTIONS
.c-table-actions {
    width: 100%;
    height: 100%;

    position: absolute;
    right: 0;
    top: 0;

    display: flex;
    justify-content: flex-end;
    align-items: center;

    pointer-events: none;

    &__container {
        position: sticky;

        right: 0;
        width: 4rem;
        height: calc(100% - 1px);

        display: flex;
        justify-content: flex-end;
        align-items: center;

        background: linear-gradient(
            to right,
            rgba(var(--clr-white-rgb), 0) 0%,
            rgba(var(--clr-white-rgb), 0.7) 10%,
            rgba(var(--clr-white-rgb), 1) 20%,
            rgba(var(--clr-white-rgb), 1) 100%
        );
        pointer-events: none;
    }

    &__action {
        position: sticky;
        right: 0.5rem;
        pointer-events: auto;
    }

    &--hidden {
        visibility: hidden;
    }
}
